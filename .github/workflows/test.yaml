name: "CI - Test Features"
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test-autogenerated:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - javascript
          - basedpyright_ruff
          - typescript_eslint
          - vscode-json-language-server
        baseImage:
          - debian:latest
          - ubuntu:latest
          - mcr.microsoft.com/devcontainers/base:ubuntu
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  # test-scenarios:
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   strategy:
  #     matrix:
  #       features:
  #         - jedi_ruff
  #         - pyright_ruff
  #         - pyright-background-analysis_ruff
  #         - typescript_eslint
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: "Install latest devcontainer CLI"
  #       run: npm install -g @devcontainers/cli

  #     - name: "Generating tests for '${{ matrix.features }}' scenarios"
  #       run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated --skip-duplicated .

  test-global:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .

  call-release-workflow:
    needs: [test-autogenerated, test-global]
    if: success() && github.event_name != 'pull_request'
    uses: ./.github/workflows/release.yaml
